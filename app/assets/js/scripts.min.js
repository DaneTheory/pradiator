"use strict";var _slicedToArray=function(){function n(n,r){var t=[],e=!0,o=!1,a=void 0;try{for(var i,u=n[Symbol.iterator]();!(e=(i=u.next()).done)&&(t.push(i.value),!r||t.length!==r);e=!0);}catch(n){o=!0,a=n}finally{try{!e&&u.return&&u.return()}finally{if(o)throw a}}return t}return function(r,t){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return n(r,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();!function(){function n(n){n?$(".github-logo").addClass("spinning"):$(".github-logo").removeClass("spinning")}function r(r){var e=t(r);$("#result-container").html(e),n(!1)}function t(n){function r(r){var t=r.split("/"),o=_slicedToArray(t,2),a=o[0],i=o[1],u=n[r],c=e(u)?"repository outdated":"repository";return $("<div>",{class:c}).append($("<div>",{class:"team-name",text:a})).append($("<div>",{class:"repository-name",text:i})).append($("<div>",{class:"pr-count",text:u.length}))}return R.map(r,R.keys(n))}function e(n){return void 0!==R.find(o,n)}function o(n){var r=moment(n.updated_at),t=moment().subtract(5,"days");return r.isBefore(t)}function a(r){n(!1),console.log("ERROR",r)}function i(){return n(!0),Bacon.fromCallback(function(n){$(document).ready(n)})}function u(){return Bacon.fromPromise($.ajax({url:"/prs/",type:"GET",dataType:"json",timeout:1e4}))}var c=Bacon.combineAsArray(u(),i()).map(R.prop(0));c.onValue(r),c.onError(a)}();